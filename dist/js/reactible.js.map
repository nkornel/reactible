{"version":3,"sources":["../../src/editablefield.js"],"names":[],"mappings":"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","file":"reactible.js","sourcesContent":["/**\n * EditableField plugin built with React.js, based slightly on the x-Editable jQuery library.\n * This supports AJAX sources trough the source attribute, and the following field types:\n * Text\n * TextArea\n * Select\n * Select2?\n *\n * The mandatory attributes are fieldType, fieldName, fieldTitle.\n * The component hierarchy as follows:\n * \n * EditableFieldBox\n *     |\n *     | EditableField + <label>\n *         |\n *         | EditableEditBox + <span>\n *             |\n *             | EditableInput | EditableTextAreaInput | EditableSelectInput\n *             | EditableStoreButton\n *             | EditableCancelButton\n */\n\n/**\n * The EditableFieldBox component\n *\n * The main component for EditableField, which contains the label and the EditableField component.\n * \n */\nvar EditableFieldBox = React.createClass({\n    getInitialState: function () {\n        return {fValue: []};\n    },\n    \n    componentDidMount: function () {\n        var formattedRes, fieldVal = [];\n\n        if ((this.props.fieldType === 'select' || this.props.fieldType == 'select-multiple')\n            && typeof this.props.fieldSelected !== 'undefined') {\n            /**\n             * In case of select, radio, check and select2 we need\n             * the prepopulated list with id: fieldName parts.\n             *\n             * For select multiple we need to check for various values in array.\n             * For that we need to know if the fieldSelected is an array effectively and the filter \n             * must be based on indexOf instead of equality validation.\n             */\n            Axe.grab(this.props.fieldSource, function (res) {\n                formattedRes = typeof res == 'string' ? JSON.parse(res) : res;\n                // We need the field value for the rendering.\n                \n                // Treating the selection which is for some reason sometimes comes as a string.\n                // Must be traced...\n                var selected = [];\n                if (this.props.fieldType === 'select-multiple') {\n                    selected = JSON.parse(this.props.fieldSelected);\n                } else if (this.props.fieldSelected.constructor !== Array) {\n                    selected = JSON.parse('['+this.props.fieldSelected+']');\n                }\n                //var selected = this.props.fieldSelected.indexOf('[') === -1 ? JSON.parse('[\"'+this.props.fieldSelected+'\"]') : JSON.parse(this.props.fieldSelected);\n\n                var items = formattedRes.filter(function (obj) {\n                    return selected.indexOf(obj.id) > -1\n                });\n\n                for (var i = items.length - 1; i >= 0; i--) {\n                    fieldVal.push(items[i][this.props.fieldName]);\n                };\n                \n                //console.log(fieldVal); \n                this.setState({fValue: fieldVal});\n            }.bind(this));\n        } else {\n            // In case of text, textArea we just get and show.\n            if (this.props.fieldValue) {\n                this.setState({fValue: this.props.fieldValue});\n            } else {\n                Axe.grab(this.props.fieldUrl, function (res) {\n                    this.setState({fValue: typeof res == 'string' ? JSON.parse(res)[this.props.fieldName] : res[this.props.fieldName]});\n                }.bind(this));\n            }\n        }\n    },\n\n    dataUpdated: function (e) {       \n        if ((this.props.fieldType === 'select' || this.props.fieldType === 'select-multiple')\n            && typeof this.props.fieldSelected !== 'undefined') {\n            \n            var formattedRes;\n            var fieldVal = [];\n\n            Axe.grab(this.props.fieldSource, function (res) {\n                formattedRes = typeof res == 'string' ? JSON.parse(res) : res;\n\n                // Treating the selection which is for some reason sometimes comes as a string.\n                // Must be traced...\n                var selection = [];\n                if (e.newValue.constructor === Array &&\n                    e.newValue[0].constructor !== Number) {\n                    for (var element in e.newValue) {\n                        if (e.newValue[element].constructor !== Number) {\n                            selection.push(Number(e.newValue[element]));\n                        }\n                    }\n                } else if (e.newValue.constructor !== Array) {\n                    selection = JSON.parse('['+e.newValue+']');\n                }\n\n                var items = formattedRes.filter(function (obj) {\n                    return selection.indexOf(obj.id) > -1\n                });\n\n                for (var i = items.length - 1; i >= 0; i--) {\n                    fieldVal.push(items[i][this.props.fieldName]);\n                };\n                \n                //console.log(fieldVal); \n                this.setState({fValue: fieldVal});\n                delete e.newValue;\n            }.bind(this));\n        } else {\n            this.setState({fValue: e.newValue});\n        }\n    },\n\n    render: function () {\n        return (\n            <EditableField fieldType={this.props.fieldType} \n                           fieldValue={this.state.fValue} \n                           fieldUrl={this.props.fieldUrl}\n                           fieldSource={this.props.fieldSource} \n                           fieldSelected={this.props.fieldSelected} \n                           fieldName={this.props.fieldName}\n                           dataUpdatedCallback={this.dataUpdated} />\n        );\n    }\n});\n\n/**\n * The EditableField component\n *\n * This is the first child of EditableFieldBox, and it contains the field title and EditableEditBox component which holds\n * the components for the field edition.\n * \n */\nvar EditableField = React.createClass({\n    getInitialState: function () {\n        return {\n            viewStatus: true\n        };\n    },\n\n    checkType: function (fieldType) {\n        if (fieldType === 'select-multiple') {\n            var selectedNodes = this.props.fieldValue.map(function (node) {\n                return (\n                    <li key={node} className=\"selected_item\" onClick={this.handleEditClick}>{node}</li>\n                );\n            }.bind(this));\n\n            return <div className={this.state.viewStatus ? 'editableMultiple' : 'hidden editableMultiple'}>\n                        <ul>\n                        {selectedNodes}\n                        </ul>\n                    </div>;\n\n        } else {\n            return <span onClick={this.handleEditClick} className={this.state.viewStatus ? '' : 'hidden'}>{this.props.fieldValue}</span>;\n        }\n    },\n\n    handleEditClick: function () {\n        this.setState({viewStatus: false});\n    },\n\n    handleCloseClick: function () {\n        this.setState({viewStatus: true});\n    },\n\n    handleDataUpdate: function (c) {\n        this.setState({viewStatus: true});\n        this.props.dataUpdatedCallback(c);\n    },\n\n    render: function () {\n        return (\n            <div>\n                {this.checkType()}\n                <EditableEditBox viewStatus={this.state.viewStatus} \n                                fieldType={this.props.fieldType} \n                                fieldValue={this.props.fieldValue}\n                                fieldUrl={this.props.fieldUrl}\n                                fieldSource={this.props.fieldSource} \n                                fieldName={this.props.fieldName} \n                                fieldSelected={this.props.fieldSelected}\n                                callbackViewParent={this.handleCloseClick}\n                                dataUpdatedCallback={this.handleDataUpdate} />\n            </div>         \n        );\n    }\n});\n\n/**\n * The EditableEditBox component\n *\n * This is basically a container for the edition components.\n *  \n */\nvar EditableEditBox = React.createClass({\n    onChildClick: function () {\n        this.props.callbackViewParent();\n    },\n\n    handleDataUpdate: function (c) {\n        this.props.dataUpdatedCallback(c);\n    },\n\n    mountComponent: function () {\n        switch (this.props.fieldType) {\n            case 'text':\n                return <EditableTextInput fieldName={this.props.fieldName} fieldValue={this.props.fieldValue} fieldType={this.props.fieldType} />;\n                break;\n            case 'select':\n            case 'select-multiple':\n                return <EditableSelectInput \n                            fieldName={this.props.fieldName} \n                            fieldValue={this.props.fieldValue} \n                            fieldSource={this.props.fieldSource} \n                            fieldSelected={this.props.fieldSelected}\n                            fieldType={this.props.fieldType} />\n                break;\n            case 'checkbox':\n                return '';\n                break;\n            case 'radio':\n                return '';\n                break;\n            case 'textarea':\n                return <EditableTextAreaInput fieldName={this.props.fieldName} fieldValue={this.props.fieldValue} fieldSource={this.props.fieldSource} />\n                break;\n            default:\n                console.log('no-type given');\n                break;\n        }\n    },\n\n    render: function () {\n        return (\n            <div className={this.props.viewStatus ? 'hidden' : ''}>\n                {this.mountComponent()}\n                <EditableStoreButton fieldUrl={this.props.fieldUrl} \n                                     fieldName={this.props.fieldName}\n                                     dataUpdatedCallback={this.handleDataUpdate} />\n                <EditableCancelButton callbackParent={this.onChildClick} />\n            </div>\n        );\n    }\n});\n\n/**\n * The EditableInput components\n *\n * This is responsible for the updates on the field value, it can be text, textarea, email, date, datetime, select, select2.\n */\nvar EditableTextInput = React.createClass({\n    getInitialState: function () {\n        return {fieldValue: []};\n    },\n\n    handleChange: function (event) {\n        this.setState({fieldValue: event.target.value});\n    },\n\n    componentWillReceiveProps: function (nextPros) {\n        this.setState({fieldValue: nextPros.fieldValue});\n    },\n\n    render: function () {            \n        return <input type={this.props.fieldType} name={this.props.fieldName} value={this.state.fieldValue} onChange={this.handleChange} className=\"form-control\" id=\"editableInput\" />\n    }\n});\n\nvar EditableTextAreaInput = React.createClass({\n    getInitialState: function () {\n        return {fieldValue: []};\n    },\n\n    handleChange: function (event) {\n        this.setState({fieldValue: event.target.value});\n    },\n\n    componentWillReceiveProps: function (nextPros) {\n        this.setState({fieldValue: nextPros.fieldValue});\n    },\n\n    render: function () {\n        return <textarea id=\"editableInput\" rows=\"5\" value={this.state.fieldValue} name={this.props.fieldName} onChange={this.handleChange}></textarea>;\n    }\n});\n\nvar EditableSelectInput = React.createClass({\n    getInitialState: function () {\n        return {fieldData: [], defValue: this.props.fieldType == 'select' ? 0 : []};\n    },\n\n    componentDidMount: function () {\n        Axe.grab(this.props.fieldSource, function (res) {\n            this.setState({fieldData: typeof res == 'string' ? JSON.parse(res) : res, defValue: this.props.fieldSelected});\n        }.bind(this));\n    },\n\n    handleChange: function (ev) {\n        var selection = [];\n        for (var i = ev.target.options.length - 1; i >= 0; i--) {\n            if (ev.target.options[i].selected) {\n                selection.push(ev.target.options[i].value);\n            }\n        };\n\n        this.setState({defValue:selection})\n    },\n\n    render: function () {\n        var selectNodes = this.state.fieldData.map(function (node) {\n            return (\n                <option key={node.id} value={node.id}>{node[this.props.fieldName]}</option>\n            );\n        }.bind(this));\n        return (\n            <select name={this.props.fieldName} id=\"editableInput\" value={this.state.defValue} onChange={this.handleChange} multiple={this.props.fieldType == 'select' ? false : true}>\n                {selectNodes}\n            </select>\n        );\n    }\n});\n\n/**\n * The EditableStoreButton component\n *\n * This is responsible for updating the field on the server and for \n * dispatch the updated event for state modification on the parent containers.\n * \n */\nvar EditableStoreButton = React.createClass({\n    handleStoreEvent: function (event) {\n        var element = event.target.previousSibling ? event.target.previousSibling : event.target.parentNode.previousSibling;\n\n        if (element.multiple) {\n            var val = [];\n            for (var i = element.options.length - 1; i >= 0; i--) {\n                if (element.options[i].selected) {\n                    val.push(element.options[i].value);\n                }\n            };\n        } else {\n            var val = element.value;\n        }\n        var url = this.props.fieldUrl;\n        var prop = this.props.fieldName;\n\n        if (val.length === 0) {\n            alert('Please fill the field');\n\n            return false;\n        }\n\n        var data = {\n            'name': prop,\n            'value': val\n        };\n\n        data = JSON.stringify(data);\n \n        Axe.slash(url, data, null, function (res) {\n            //alert('Success!');\n            setTimeout(function () {\n                this.props.dataUpdatedCallback({'newValue':val});\n            }.bind(this), 500);\n        }.bind(this));\n    },\n\n    render: function () {\n        return <button type=\"button\" className=\"editableStoreButton btn btn-primary\" onClick={this.handleStoreEvent}><i className=\"mdi-navigation-check\"></i></button>;\n    }\n});\n\n/**\n * The EditableCancelButton component\n *\n * This is responsible for cancel the updating state and return the box to view state.\n */\nvar EditableCancelButton = React.createClass({\n    handleClosing: function () {\n        this.props.callbackParent();\n    },\n\n    render: function () {\n        return <button type=\"button\" className=\"editableCancelButton btn btn-default\" onClick={this.handleClosing}><i className=\"mdi-navigation-close\"></i></button>;\n    }\n});\n\n\n"]}