{"version":3,"sources":["../../src/editablefield.js"],"names":[],"mappings":"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","file":"reactible.js","sourcesContent":["/**\n * EditableField plugin built with React.js, based slightly on the x-Editable jQuery library.\n * This supports AJAX sources trough the source attribute, and the following field types:\n * Text\n * TextArea\n * Select\n * Select2?\n *\n * The mandatory attributes are fieldType, fieldName, fieldTitle.\n * The component hierarchy as follows:\n * \n * EditableFieldBox\n *     |\n *     | EditableField + <label>\n *         |\n *         | EditableEditBox + <span>\n *             |\n *             | EditableInput | EditableTextAreaInput | EditableSelectInput\n *             | EditableStoreButton\n *             | EditableCancelButton\n */\n\n/**\n * The EditableFieldBox component\n *\n * The main component for EditableField, which contains the label and the EditableField component.\n * \n */\nvar EditableFieldBox = React.createClass({\n    getInitialState: function () {\n        return {fValue: []};\n    },\n\n    isInSelectedFields: function (node, selection) {\n        var isInlist = false;\n\n        for (var i = selection.length - 1; i >= 0; i--) {\n            if (selection[i] == node.id) isInlist = true;\n        };\n\n        return isInlist;\n    },\n    \n    componentDidMount: function () {\n        var formattedRes, fieldVal = [];\n\n        if ((this.props.fieldType === 'select' || this.props.fieldType == 'select-multiple')\n            && typeof this.props.fieldSelected !== 'undefined') {\n            /**\n             * In case of select, radio, check and select2 we need\n             * the prepopulated list with id: fieldName parts.\n             *\n             * For select multiple we need to check for various values in array.\n             * For that we need to know if the fieldSelected is an array effectively and the filter \n             * must be based on indexOf instead of equality validation.\n             */\n            if (this.props.fieldSource.indexOf('{') > -1 && this.props.fieldSource.indexOf('}') > -1) {\n                var list = JSON.parse(this.props.fieldSource);\n                \n                var selected = [];\n                if (this.props.fieldType === 'select-multiple') {\n                    selected = this.props.fieldSelected && this.props.fieldSelected !== '!EMPTY!' ? JSON.parse(this.props.fieldSelected) : [];\n                } else if (this.props.fieldSelected.constructor !== Array) {\n                    selected = this.props.fieldSelected !== '!EMPTY!' ? JSON.parse('[\"'+this.props.fieldSelected+'\"]') : [];\n                }\n\n                for (var i in list) {\n                    for (var s in selected) {\n                        if (i == selected[s]) \n                            fieldVal.push(list[i])\n                    };\n                }\n                \n                this.setState({fValue: fieldVal.length == 0 ? ['Select an option...'] : fieldVal});\n            } else if (this.props.fieldSource) {\n                Axe.grab(this.props.fieldSource, function (res) {\n                    formattedRes = typeof res == 'string' ? JSON.parse(res) : res;\n                    // We need the field value for the rendering.\n                    \n                    // Treating the selection which is for some reason sometimes comes as a string.\n                    // Must be traced...\n                    var selected = [];\n                    if (this.props.fieldType === 'select-multiple') {\n                        selected = JSON.parse(this.props.fieldSelected);\n                    } else if (this.props.fieldSelected.constructor !== Array) {\n                        selected = JSON.parse('[\"'+this.props.fieldSelected+'\"]');\n                    }\n\n                    // After parsing the formattedRes can be an Object that has to be flatten.\n                    var items = [];\n\n                    if (formattedRes.constructor == Object) {\n\n                        for (var i in formattedRes) {\n                            var element = {};\n                            element[\"id\"] = i;\n                            element[this.props.fieldName] = formattedRes[i];\n                            items.push(element);\n                        }\n\n                        var newSelection = [];\n\n                        for (var i = items.length - 1; i >= 0; i--) {\n                            if (this.isInSelectedFields(items[i],selected)) {\n                                newSelection.push(items[i]);\n                            }\n                        };\n\n                        items = newSelection;\n\n                    } else {\n                        items = formattedRes.filter(function (obj) {\n                            return selected.toString().indexOf(obj.id.toString()) > -1\n                        });\n                    }\n\n                    for (var i = items.length - 1; i >= 0; i--) {\n                        fieldVal.push(items[i][this.props.fieldName]);\n                    };\n                    \n                    //console.log(fieldVal); \n                    this.setState({fValue: fieldVal.length == 0 ? ['Select an option...'] : fieldVal});\n                }.bind(this));   \n            }\n        } else {\n            // In case of text, textArea we just get and show.\n            if (this.props.fieldValue && this.props.fieldValue !== '!EMPTY!') {\n                this.setState({fValue: this.props.fieldValue});\n            } else if (this.props.fieldValue && this.props.fieldValue === '!EMPTY!') {\n                this.setState({fValue: \"Enter a value...\"})\n            } else {\n                Axe.grab(this.props.fieldUrl, function (res) {\n                    this.setState({fValue: typeof res == 'string' ? JSON.parse(res)[this.props.fieldName] : \"Enter a value...\"});\n                }.bind(this));\n            }\n        }\n    },\n\n    dataUpdated: function (e) {       \n        if ((this.props.fieldType === 'select' || this.props.fieldType === 'select-multiple')\n            && typeof this.props.fieldSelected !== 'undefined') {\n            \n            var formattedRes;\n            var fieldVal = [];\n\n            if (this.props.fieldSource.indexOf('{') > -1 && this.props.fieldSource.indexOf('}') > -1) {\n                var list = JSON.parse(this.props.fieldSource);\n                \n                var selected = [];\n                if (e.newValue.constructor === Array) {\n                    for (var element in e.newValue) {\n                        selected.push(e.newValue[element]);\n                    }\n                } else {\n                    selected = JSON.parse('[\"'+e.newValue+'\"]');\n                }\n\n                var items = [];\n\n                for (var i in list) {\n                    for (var s in selected) {\n                        if (i == selected[s]) {\n                            fieldVal.push(list[i])\n                        }\n                    };\n                }\n\n                if (fieldVal.length === 0 || fieldVal[0] == \"\" || e.newValue == '!EMPTY!') {\n                    fieldVal = [];\n                    fieldVal.push(\"Select an option...\");\n                }\n\n                this.setState({fValue: fieldVal});\n            } else if (this.props.fieldSource) { // Just to check if it has something...    \n                Axe.grab(this.props.fieldSource, function (res) {\n                    formattedRes = typeof res == 'string' ? JSON.parse(res) : res;\n\n                    var selection = [];\n                    if (e.newValue.constructor === Array) {\n                        for (var element in e.newValue) {\n                            selection.push(e.newValue[element]);\n                        }\n                    } else {\n                        selection = JSON.parse('[\"'+e.newValue+'\"]');\n                    }\n\n                    // After parsing the formattedRes can be an Object that has to be flatten.\n                    var items = [];\n\n                    if (formattedRes.constructor == Object) {\n\n                        for (var i in formattedRes) {\n                            var element = {};\n                            element[\"id\"] = i;\n                            element[this.props.fieldName] = formattedRes[i];\n                            items.push(element);\n                        }\n\n                        var newSelection = [];\n\n                        for (var i = items.length - 1; i >= 0; i--) {\n                            if (this.isInSelectedFields(items[i],selection)) {\n                                newSelection.push(items[i]);\n                            }\n                        };\n\n                        items = newSelection;\n                    } else {\n                        items = formattedRes.filter(function (obj) {\n                            return selection.toString().indexOf(obj.id.toString()) > -1\n                        });\n                    }\n\n                    if (e.newValue !== \"\" && e.newValue !== \"!EMPTY!\") {\n                        for (var i = items.length - 1; i >= 0; i--) {\n                            fieldVal.push(items[i][this.props.fieldName]);\n                        };  \n                    } else {\n                        fieldVal = [];\n                        fieldVal.push(\"Select an option...\");\n                    }\n                    \n                    //console.log(fieldVal); \n                    this.setState({fValue: fieldVal});\n                    delete e.newValue;\n                }.bind(this));\n            }\n        } else {\n            if (e.newValue !== \"\" && e.newValue !== \"!EMPTY!\") {\n                this.setState({fValue: e.newValue});\n            } else {\n                this.setState({fValue: \"Enter a value...\"})\n            }\n        }\n    },\n\n    render: function () {\n        return (\n            <EditableField fieldType={this.props.fieldType} \n                           fieldValue={this.state.fValue} \n                           fieldUrl={this.props.fieldUrl}\n                           fieldSource={this.props.fieldSource} \n                           fieldSelected={this.props.fieldSelected} \n                           fieldName={this.props.fieldName}\n                           dataUpdatedCallback={this.dataUpdated} />\n        );\n    }\n});\n\n/**\n * The EditableField component\n *\n * This is the first child of EditableFieldBox, and it contains the field title and EditableEditBox component which holds\n * the components for the field edition.\n * \n */\nvar EditableField = React.createClass({\n    getInitialState: function () {\n        return {\n            viewStatus: true\n        };\n    },\n\n    checkType: function () {\n        if (this.props.fieldType === 'select-multiple') {\n            var selectedNodes = this.props.fieldValue.map(function (node) {\n                return (\n                    <li key={node} className=\"selected_item\" onClick={this.handleEditClick}>{node}</li>\n                );\n            }.bind(this));\n\n            return <div className={this.state.viewStatus ? 'editableMultiple' : 'hidden editableMultiple'}>\n                        <ul>\n                        {selectedNodes}\n                        </ul>\n                    </div>;\n\n        } else {\n            return <span onClick={this.handleEditClick} \n                         className={this.state.viewStatus ? '' : 'hidden'}>\n                         {this.props.fieldValue && this.props.fieldValue.constructor === 'Array' ? this.props.fieldValue[0] : this.props.fieldValue}\n                    </span>;\n        }\n    },\n\n    handleEditClick: function () {\n        this.setState({viewStatus: false});\n    },\n\n    handleCloseClick: function () {\n        this.setState({viewStatus: true});\n    },\n\n    handleDataUpdate: function (c) {\n        this.setState({viewStatus: true});\n        this.props.dataUpdatedCallback(c);\n    },\n\n    render: function () {\n        return (\n            <div>\n                {this.checkType()}\n                <EditableEditBox viewStatus={this.state.viewStatus} \n                                fieldType={this.props.fieldType} \n                                fieldValue={this.props.fieldValue}\n                                fieldUrl={this.props.fieldUrl}\n                                fieldSource={this.props.fieldSource} \n                                fieldName={this.props.fieldName} \n                                fieldSelected={this.props.fieldSelected}\n                                callbackViewParent={this.handleCloseClick}\n                                dataUpdatedCallback={this.handleDataUpdate} />\n            </div>         \n        );\n    }\n});\n\n/**\n * The EditableEditBox component\n *\n * This is basically a container for the edition components.\n *  \n */\nvar EditableEditBox = React.createClass({\n    onChildClick: function () {\n        this.props.callbackViewParent();\n    },\n\n    handleDataUpdate: function (c) {\n        this.props.dataUpdatedCallback(c);\n    },\n\n    mountComponent: function () {\n        switch (this.props.fieldType) {\n            case 'text':\n                return <EditableTextInput fieldName={this.props.fieldName} \n                                          fieldValue={this.props.fieldValue} \n                                          fieldType={this.props.fieldType} />;\n                break;\n            case 'select':\n            case 'select-multiple':\n                return <EditableSelectInput \n                            fieldName={this.props.fieldName} \n                            fieldValue={this.props.fieldValue} \n                            fieldSource={this.props.fieldSource} \n                            fieldSelected={this.props.fieldSelected}\n                            fieldType={this.props.fieldType} />\n                break;\n            case 'checkbox':\n                return '';\n                break;\n            case 'radio':\n                return '';\n                break;\n            case 'textarea':\n                return <EditableTextAreaInput fieldName={this.props.fieldName} fieldValue={this.props.fieldValue} fieldSource={this.props.fieldSource} />\n                break;\n            default:\n                console.log('no-type given');\n                break;\n        }\n    },\n\n    render: function () {\n        return (\n            <div className={this.props.viewStatus ? 'hidden' : ''}>\n                {this.mountComponent()}\n                <EditableStoreButton fieldUrl={this.props.fieldUrl} \n                                     fieldName={this.props.fieldName}\n                                     dataUpdatedCallback={this.handleDataUpdate} />\n                <EditableCancelButton callbackParent={this.onChildClick} />\n            </div>\n        );\n    }\n});\n\n/**\n * The EditableInput components\n *\n * This is responsible for the updates on the field value, it can be text, textarea, email, date, datetime, select, select2.\n */\nvar EditableTextInput = React.createClass({\n    getInitialState: function () {\n        return {fieldValue: [], errors: []};\n    },\n\n    handleChange: function (event) {\n        this.setState({fieldValue: event.target.value});\n    },\n\n    componentWillReceiveProps: function (nextPros) {\n        this.setState({fieldValue: nextPros.fieldValue});\n    },\n\n    render: function () {            \n        return <input type={this.props.fieldType} \n                      data-error-hint={this.state.errors} \n                      name={this.props.fieldName} \n                      value={this.state.fieldValue} \n                      onChange={this.handleChange} \n                      className=\"form-control\" \n                      id=\"editableInput\" />\n    }\n});\n\nvar EditableTextAreaInput = React.createClass({\n    getInitialState: function () {\n        return {fieldValue: []};\n    },\n\n    handleChange: function (event) {\n        this.setState({fieldValue: event.target.value});\n    },\n\n    componentWillReceiveProps: function (nextPros) {\n        this.setState({fieldValue: nextPros.fieldValue});\n    },\n\n    render: function () {\n        return  <textarea id=\"editableInput\" \n                        rows=\"5\" \n                        value={this.state.fieldValue} \n                        name={this.props.fieldName} \n                        onChange={this.handleChange}>\n                </textarea>;\n    }\n});\n\nvar EditableSelectInput = React.createClass({\n    getInitialState: function () {\n        return {fieldData: [], defValue: this.props.fieldType == 'select' ? 0 : []};\n    },\n\n    componentDidMount: function () {\n        if (this.props.fieldSource.indexOf('{') > -1 && this.props.fieldSource.indexOf('}') > -1) {\n            var formattedSelectedField = this.props.fieldSelected;\n\n            if (formattedSelectedField.indexOf('[') == -1 && formattedSelectedField.indexOf(']') == -1) {\n                formattedSelectedField = '[\"'+this.props.fieldSelected+'\"]';\n            }\n            this.setState({\n                fieldData: JSON.parse(this.props.fieldSource),\n                defValue: JSON.parse(formattedSelectedField)\n            });\n        } else {\n            Axe.grab(this.props.fieldSource, function (res) {\n                var formattedRes = typeof res == 'string' ? JSON.parse(res) : res;\n                var items = [];\n                if (formattedRes.constructor == Object) {\n                    for (var i in formattedRes) {\n                        var element = {};\n                        element[\"id\"] = i;\n                        element[this.props.fieldName] = formattedRes[i];\n                        items.push(element);\n                    }\n                } else {\n                    items = formattedRes;\n                }\n\n                this.setState({\n                    fieldData: items,\n                    defValue: this.props.fieldSelected\n                });\n            }.bind(this));\n        }\n    },\n\n    handleChange: function (ev) {\n        var selection = [];\n        for (var i = ev.target.options.length - 1; i >= 0; i--) {\n            if (ev.target.options[i].selected) {\n                selection.push(ev.target.options[i].value);\n            }\n        };\n\n        this.setState({defValue:selection})\n    },\n\n    renderSelectOptions: function () {\n        if (this.props.fieldSource.indexOf('{') > -1) {\n            var newMap = [];\n            for (var i in this.state.fieldData) {\n                newMap.push({\n                    id: i,\n                    value: this.state.fieldData[i]\n                });\n            }\n\n            var selectNodes = newMap.map(function (node) {\n                return (\n                    <option key={node.id} value={node.id}>{node['value']}</option>\n                );\n            }.bind(this));\n        } else {\n            // Check if object or array. If object turn into an array.\n            if (this.state.fieldData.constructor == Object) {\n                var arr = Object.keys(this.state.fieldData).map (function (k) {\n                    return {k: this.state.fieldData[k]};\n                }.bind(this));\n\n                if (arr.length > 0) {\n                    this.state.fieldData = arr;\n                } else {\n                    this.state.fieldData = [];\n                }\n            }\n\n            var selectNodes = this.state.fieldData.map(function (node) {\n                return (\n                    <option key={node.id} value={node.id}>{node[this.props.fieldName]}</option>\n                );\n            }.bind(this));\n        }\n\n        return selectNodes;\n    },\n\n    valueJsonVerifier: function (selected) {\n        if (selected.toString().indexOf('[') == -1 && selected.toString().indexOf(']') == -1) {\n            if (selected.constructor !== Array) {\n                selected = JSON.parse('[\"'+selected+'\"]');\n            }\n        } else {\n            if (JSON.parse(selected)[0].constructor == Number) {\n                var newSelection = JSON.parse(selected);\n                selected = [];\n                for (var i = newSelection.length - 1; i >= 0; i--) {\n                    selected.push(newSelection[i].toString());\n                }               \n            }\n        }\n\n        return selected;\n    },\n\n    render: function () {\n        return (\n            <select name={this.props.fieldName} id=\"editableInput\" value={this.props.fieldType == 'select' ? this.state.defValue : this.valueJsonVerifier(this.state.defValue)} onChange={this.handleChange} multiple={this.props.fieldType == 'select' ? false : true}>\n                {this.renderSelectOptions()} \n            </select>\n        );\n    }\n});\n\n/**\n * The EditableStoreButton component\n *\n * This is responsible for updating the field on the server and for \n * dispatch the updated event for state modification on the parent containers.\n * \n */\nvar EditableStoreButton = React.createClass({\n    handleStoreEvent: function (event) {\n        var element = this.getDOMNode().previousSibling.hasAttribute('data-reactid') ? this.getDOMNode().previousSibling : this.getDOMNode().previousSibling.children[0];\n        var elEvent = event;\n\n        if (element.multiple) {\n            var val = [];\n            for (var i = element.options.length - 1; i >= 0; i--) {\n                if (element.options[i].selected) {\n                    val.push(element.options[i].value);\n                }\n            };\n        } else {\n            var val = element.value;\n        }\n        var url = this.props.fieldUrl;\n        var prop = this.props.fieldName;\n\n        if (val.length === 0) {\n            //alert('Please fill the field');\n            //element.classList.add('reactible-invalid');\n            //console.log(element.parent);\n            //return false;\n            val = \"\";\n        }\n \n        Axe.slash(url, {name:prop,value:val}, null, function (res) {\n            //alert('Success!');\n            if (typeof res.errors !== 'undefined') {\n                if (element.parentElement.querySelector('.reactible-error')) {\n                    var errElements = element.parentElement.querySelectorAll('.reactible-error');\n                    for (var i = 0; i < errElements.length; i++) {\n                        if (typeof errElements[i] !== 'undefined')\n                            errElements[i].remove();\n                    }\n                }\n\n                element.classList.add('reactible-invalid');\n                var errorElement = document.createElement('span');\n                for (var i in res.errors) {\n                    errorElement.innerHTML += res.errors[i] + \" \";\n                }\n                errorElement.classList.add('reactible-error');\n                element.parentElement.appendChild(errorElement);\n                //console.log(elEvent);\n                return false;\n            }\n\n            if (element.parentElement.querySelector('.reactible-error')) {\n                element.classList.remove('reactible-invalid');\n                var errElements = element.parentElement.querySelectorAll('.reactible-error');\n                for (var i = 0; i < errElements.length; i++) {\n                    if (typeof errElements[i] !== 'undefined')\n                        errElements[i].remove();\n                }\n            }\n\n            setTimeout(function () {\n                this.props.dataUpdatedCallback({'newValue':val});\n            }.bind(this), 500);\n        }.bind(this));\n    },\n\n    render: function () {\n        return <button type=\"button\" className=\"editableStoreButton btn btn-primary\" onClick={this.handleStoreEvent}><i className=\"mdi-navigation-check\"></i></button>;\n    }\n});\n\n/**\n * The EditableCancelButton component\n *\n * This is responsible for cancel the updating state and return the box to view state.\n */\nvar EditableCancelButton = React.createClass({\n    handleClosing: function (e) {\n        var element = e.target.previousSibling ? e.target.previousSibling : e.target.parentNode.previousSibling.previousSibling;\n        element.classList.remove('reactible-invalid');\n        if (element.parentElement.querySelector('.reactible-error')) {\n            var errElements = element.parentElement.querySelectorAll('.reactible-error');\n            for (var i = 0; i < errElements.length; i++) {\n                if (typeof errElements[i] !== 'undefined')\n                    errElements[i].remove();\n            }\n        }\n        this.props.callbackParent();\n    },\n\n    render: function () {\n        return <button type=\"button\" className=\"editableCancelButton btn btn-default\" onClick={this.handleClosing}><i className=\"mdi-navigation-close\"></i></button>;\n    }\n});\n\n\n"]}